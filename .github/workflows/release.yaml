name: Build and Release

on:
  push:
    tags:
      - "v*" # 匹配以 "v" 开头的标签，例如 v1.0, v2.3.4

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest]
        python-version: ["3.8", "3.10"]

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Python 环境
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 安装依赖和创建虚拟环境
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate  # Linux 和 MacOS 环境
          pip install --upgrade pip
          pip install pybind11 pybind11-stubgen

      # Windows 下激活虚拟环境（适用于 windows-latest）
      - name: Activate venv on Windows
        if: runner.os == 'Windows'
        run: |
          .venv\Scripts\activate.bat
          pip install --upgrade pip
          pip install pybind11 pybind11-stubgen

      # 构建项目
      - name: Configure and Build with CMake
        run: |
          cmake -S . -B build -DPYTHON_EXECUTABLE=$(which python)
          cmake --build build

      # 打包构建产物
      - name: Package build artifacts
        run: |
          mkdir -p dist
          cp -r build/* dist/

      # 上传构建结果
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 创建 GitHub Release 并上传产物
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            **Release Details:**
            - OS: ${{ matrix.os }}
            - Python: ${{ matrix.python-version }}
          draft: false
          prerelease: false

      - name: Upload Build Artifacts to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dist/
          asset_name: build-${{ matrix.os }}-py${{ matrix.python-version }}.zip
          asset_content_type: application/zip
